// =====================================
//
//   Helpers
//   -> mixins, functions, extends, animations
//
// =====================================

// -------------------------------------
//   Functions
// -------------------------------------

// ----- Em ----- //
// -> Converts pixel value to its em equivalent in the given context
//
// $target - target pixel size
// $context - context font-size (defaults to HTML font-size: 16px)

@function em($target, $context: $b-fontSize) {
  @if ($target == 0) {
    @return 0;
  } @else {
    @return ($target / $context) * 1em;
  }
}

// -------------------------------------
//   Mixins
// -------------------------------------

@mixin font-face($family, $path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    font-style: $style;
    font-weight: $weight;
    src: font-url('#{$path}.eot');
    src: font-url('#{$path}.eot?#iefix') format('embedded-opentype'), font-url('#{$path}.woff') format('woff'), font-url('#{$path}.ttf') format('truetype'), font-url('#{$path}.svg##{$family}') format('svg');
  }
}

@mixin opacity($value) {
  filter: alpha(opacity=$value);
  -webkit-opacity: $value / 100;
  -moz-opacity: $value / 100;
  opacity: $value / 100;
}

@mixin perspective($perspective) {
  perspective: $perspective;
  -moz-perspective: $perspective;
  -webkit-perspective: $perspective;
}

@mixin property-transition($transition-details) {
  -webkit-transform: $transition-details;
  -moz-transition: $transition-details;
  -o-transition: $transition-details;
  transition: $transition-details;
}

@mixin transform($transform-details) {
  -webkit-transform: $transform-details;
  -moz-transform: $transform-details;
  -ms-transform: $transform-details;
  -o-transform: $transform-details;
  transform: $transform-details;
}

// ----- img replacement / conceal text ----- //

@mixin hide-text() {
  display: block;
  direction: ltr;
  text-indent: 200%;
  white-space: nowrap;
  overflow: hidden;
}

// ----- CSS triangle ----- //

@mixin triangle ($size, $color, $direction) {
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    border-color: transparent;
    border-style: solid;
    border-width: $size / 2;

    @if $direction == up {
      border-bottom-color: $color;

    } @else if $direction == right {
      border-left-color:   $color;

    } @else if $direction == down {
      border-top-color:    $color;

    } @else if $direction == left {
      border-right-color:  $color;
    }
  }

  @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $size solid $color;

    @if $direction == up-right {
      border-left:  $size solid transparent;

    } @else if $direction == up-left {
      border-right: $size solid transparent;
    }
  }

  @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $size solid $color;

    @if $direction == down-right {
      border-left:  $size solid transparent;

    } @else if $direction == down-left {
      border-right: $size solid transparent;
    }
  }
}

// ----- Flexbox ----- //

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
  -moz-box-ordinal-group: $val;     
  -ms-flex-order: $val;     
  -webkit-order: $val;  
  order: $val;
}


// -------------------------------------
//   Utilities
// -------------------------------------

// ----- Clearfix ----- //

.cf {
  *zoom: 1;

  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}

// ----- No Break ----- //

.text-unit {
  display: inline-block;
  white-space: nowrap;
}